<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:LootManager"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        x:Class="LootManager.MainWindow"
        mc:Ignorable="d"
        Title="Loot Manager v1.0.2.6 (Not Connected)"
        UseLayoutRounding="True"
        TextOptions.TextFormattingMode="Display"
        TextOptions.TextRenderingMode="ClearType"
        Height="700" 
        Width="1150" MinHeight="600" MinWidth="800"
        Icon="/LootManager;component/Icons/roi_icon2.ico" 
        Closing="Application_Closing" 
        Background="#FFF0F0F0" 
        Closed="Window_Closed">
  <Window.Resources>
    <local:ClassList x:Key="ClassList" />
    <local:RankList x:Key="RankList" />
  </Window.Resources>
  <Grid Margin="0">
    <Menu Margin="0,0,4,0" Height="20" VerticalAlignment="Top">
      <MenuItem Header="_File" Height="20" Width="40">
        <MenuItem x:Name="connectMenuItem" Header="_Connect" Height="20" Click="MenuItemConnect_Click">
          <MenuItem.Icon>
            <Image Source="/LootManager;component/Icons/ConnectToRemoteServer/ConnectToRemoteServer_16x.png"/>
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem x:Name="disconnectMenuItem" Header="_Disconnect" Height="20" Click="MenuItemDisconnect_Click" IsEnabled="False">
          <MenuItem.Icon>
            <Image Source="/LootManager;component/Icons/Disconnect/Disconnect_16x.png"/>
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem x:Name="refreshMenuItem" Header="_Reload Database" Height="20" Click="MenuItemRefresh_Click" IsEnabled="False">
          <MenuItem.Icon>
            <Image Source="/LootManager;component/Icons/DownloadFile/DownloadFile_16x.png"/>
          </MenuItem.Icon>
        </MenuItem>
        <Separator Height="0"/>
        <MenuItem Header="Select EQ _Log File" Height="20" >
          <MenuItem.Icon>
            <Image Source="/LootManager;component/Icons/OpenFile/OpenFile_16x.png"/>
          </MenuItem.Icon>
          <MenuItem Header="Load starting now" Height="20" Click="MenuItemSelectEQLogFile_Click">
            <MenuItem.Icon>
              <Image Source="/LootManager;component/Icons/OpenFile/OpenFile_16x.png"/>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="Re-Load past 1 hour" Height="20" Click="MenuItemSelectEQLogFile1_Click">
            <MenuItem.Icon>
              <Image Source="/LootManager;component/Icons/History/History_16x.png"/>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="Re-Load past 2 hours" Height="20" Click="MenuItemSelectEQLogFile2_Click">
            <MenuItem.Icon>
              <Image Source="/LootManager;component/Icons/History/History_16x.png"/>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="Re-Load past 4 hours" Height="20" Click="MenuItemSelectEQLogFile4_Click">
            <MenuItem.Icon>
              <Image Source="/LootManager;component/Icons/History/History_16x.png"/>
            </MenuItem.Icon>
          </MenuItem>
          <MenuItem Header="Re-Load past 6 hours" Height="20" Click="MenuItemSelectEQLogFile6_Click">
            <MenuItem.Icon>
              <Image Source="/LootManager;component/Icons/History/History_16x.png"/>
            </MenuItem.Icon>
          </MenuItem>
        </MenuItem>
        <Separator Height="0"/>
        <MenuItem Header="E_xit" Height="20" Click="MenuItemExit_Click" InputGestureText="Alt+F4">
          <MenuItem.Icon>
            <Image Source="/LootManager;component/Icons/Exit/Exit_16x.png"/>
          </MenuItem.Icon>
        </MenuItem>
      </MenuItem>
    </Menu>
    <Grid x:Name="mainGrid" Margin="4,0,4,4">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="400*" />
        <ColumnDefinition Width="6" />
        <ColumnDefinition Width="744*" />
      </Grid.ColumnDefinitions>
      <TabControl Margin="0,20,2,-1" Background="#FFE8E8E8" BorderBrush="#FF688CAF">
        <TabControl.Resources>
          <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                  <Grid x:Name="Panel">
                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                      <Setter TargetName="Panel" Property="Background" Value="#FFA7CEEE" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                      <Setter TargetName="Panel" Property="Background" Value="#FFF0F0F0" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </TabControl.Resources>
        <TabItem Header="Award Loot">
          <Grid Margin="0,0,0,-1">
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Margin="-3,-3,-3,-1">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="44*"/>
                <RowDefinition Height="9*"/>
              </Grid.RowDefinitions>
              <DataGrid x:Name="watchListView" ContextMenuOpening="WatchListContextMenu_OnOpened" AutoGenerateColumns="False" CanUserAddRows="False" SelectionMode="Single" ColumnWidth="SizeToHeader" CanUserReorderColumns="False" HeadersVisibility="Column" Grid.Row="0" GridLinesVisibility="None" SelectionChanged="WatchList_SelectionChanged" TabIndex="1" IsTabStop="True" UnloadingRow="WatchList_UnloadingRow" BorderBrush="#FF688CAF" Background="#FFE8E8E8" CanUserResizeRows="False">
                <DataGrid.Resources>
                  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF569FD8"/>
                  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FF646464" />
                  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#FFFFFF" />
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                  <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                  <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="" MaxWidth="20" MinWidth="20" IsReadOnly="True" CanUserReorder="False" Width="16">
                    <DataGridTemplateColumn.CellTemplate>
                      <DataTemplate>
                        <Button Command="Delete" BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" Background="#FFF4F4F4">
                          <Image Source="/LootManager;component/Icons/Cancel/Cancel_16xMD.png"/>
                        </Button>
                      </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                  </DataGridTemplateColumn>
                  <DataGridTextColumn Binding="{Binding Item}" ClipboardContentBinding="{x:Null}" Header="Taking Tells For" CanUserReorder="False" Width="175" />
                  <DataGridTextColumn Binding="{Binding TellCount}" ClipboardContentBinding="{x:Null}" Header="Tells" IsReadOnly="True" CanUserReorder="False" Width="45">
                    <DataGridTextColumn.CellStyle>
                      <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                      </Style>
                    </DataGridTextColumn.CellStyle>
                  </DataGridTextColumn>
                  <DataGridTextColumn Binding="{Binding Found}" ClipboardContentBinding="{x:Null}" Header="Found In DB" IsReadOnly="True" CanUserReorder="False" Width="135*"/>
                </DataGrid.Columns>
                <DataGrid.ContextMenu>
                  <ContextMenu Focusable="False">
                    <MenuItem x:Name="watchListClearMenuItem" InputGestureText="Del" Header="Clear Selected" Click="ListClear_Click" Focusable="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/Cancel/Cancel_16xMD.png"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="watchListRenameMenuItem" Header="Rename" Click="WatchListRename_Click" Focusable="False" IsEnabled="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/Rename/Rename_16x.png"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <Separator Height="0"/>
                    <MenuItem x:Name="watchListClearAllMenuItem" Header="Clear All" Click="WatchListReset_Click" Focusable="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/ClearWindowContent/ClearWindowContent_16x.png" />
                      </MenuItem.Icon>
                    </MenuItem>
                  </ContextMenu>
                </DataGrid.ContextMenu>
              </DataGrid>
              <DataGrid x:Name="requestListView" ContextMenuOpening="RequestListContextMenu_OnOpened" AutoGenerateColumns="False" CanUserAddRows="False" Margin="0,199,0,1" ColumnWidth="SizeToHeader" CanUserReorderColumns="False" HeadersVisibility="Column" GridLinesVisibility="None" TabIndex="2" IsTabStop="True" Grid.RowSpan="2" BorderBrush="#FF688CAF" Background="#FFE8E8E8" CanUserResizeRows="False" LoadingRow="RequestList_LoadingRow">
                <DataGrid.Resources>
                  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF569FD8"/>
                  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FF646464" />
                  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#FFFFFF" />
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                  <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                  <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="" IsReadOnly="True" MaxWidth="20" MinWidth="20" CanUserReorder="False" Width="16">
                    <DataGridTemplateColumn.CellTemplate>
                      <DataTemplate>
                        <Button Command="Delete" BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" Background="#FFF4F4F4">
                          <Image Source="/LootManager;component/Icons/Cancel/Cancel_16xMD.png"/>
                        </Button>
                      </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                  </DataGridTemplateColumn>
                  <DataGridTextColumn Binding="{Binding Player}" ClipboardContentBinding="{x:Null}" Header="Tell From" CanUserReorder="False" MinWidth="90" Width="120*" />
                  <DataGridTextColumn Binding="{Binding Time}" ClipboardContentBinding="{x:Null}" Header="Time" CanUserReorder="False" MinWidth="45" Width="45">
                    <DataGridTextColumn.CellStyle>
                      <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                      </Style>
                    </DataGridTextColumn.CellStyle>
                  </DataGridTextColumn>
                  <DataGridTextColumn Binding="{Binding Type}" ClipboardContentBinding="{x:Null}" Header="Type" IsReadOnly="True" CanUserReorder="False" MinWidth="55" Width="55">
                    <DataGridTextColumn.CellStyle>
                      <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                      </Style>
                    </DataGridTextColumn.CellStyle>
                  </DataGridTextColumn>
                  <DataGridTextColumn Binding="{Binding Main}" ClipboardContentBinding="{x:Null}" Header="Main 90D" IsReadOnly="True" CanUserReorder="False" MinWidth="60" Width="60">
                    <DataGridTextColumn.CellStyle>
                      <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        <Setter Property="ToolTip" Value="Based on Last 90 Days"/>
                      </Style>
                    </DataGridTextColumn.CellStyle>
                  </DataGridTextColumn>
                  <DataGridTextColumn Binding="{Binding Alt}" ClipboardContentBinding="{x:Null}" Header="Alt 90D" IsReadOnly="True" CanUserReorder="False" MinWidth="53" Width="53">
                    <DataGridTextColumn.CellStyle>
                      <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        <Setter Property="ToolTip" Value="Based on Last 90 Days"/>
                      </Style>
                    </DataGridTextColumn.CellStyle>
                  </DataGridTextColumn>
                  <DataGridTextColumn Binding="{Binding Days}" ClipboardContentBinding="{x:Null}" Header="Days Since Main" IsReadOnly="True" CanUserReorder="False" Width="130">
                    <DataGridTextColumn.CellStyle>
                      <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        <Setter Property="ToolTip" Value="Based on Last 90 Days"/>
                      </Style>
                    </DataGridTextColumn.CellStyle>
                  </DataGridTextColumn>
                </DataGrid.Columns>
                <DataGrid.ContextMenu>
                  <ContextMenu Focusable="False">
                    <MenuItem x:Name="requestListClearExpiredMenuItem" Header="Clear Expired" Click="RequestListViewClearExpired_Click" Focusable="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/Cancel/Cancel_16xMD.png"/>
                      </MenuItem.Icon>
                    </MenuItem>                    
                    <MenuItem x:Name="requestListClearMenuItem" InputGestureText="Del" Header="Clear Selected" Click="ListClear_Click" Focusable="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/Cancel/Cancel_16xMD.png"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <Separator Height="0"/>
                    <MenuItem x:Name="requestListClearAllMenuItem" Header="Clear All" Click="RequestListReset_Click" Focusable="False" IsEnabled="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/ClearWindowContent/ClearWindowContent_16x.png" />
                      </MenuItem.Icon>
                    </MenuItem>
                    <Separator Height="0"/>
                    <MenuItem x:Name="requestListViewLootMenuItem" Header="View Selected Loot History" Click="RequestListViewLoot_Click" Focusable="False" IsEnabled="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/DataTable/DataTable_16x.png"/>
                      </MenuItem.Icon>
                    </MenuItem>
                  </ContextMenu>
                </DataGrid.ContextMenu>
              </DataGrid>
              <Grid Grid.Row="2" Margin="0,0,0,4">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBox x:Name="genChatBox" Margin="0,-1,109,-3" MinWidth="0" TextWrapping="Wrap" FontStyle="Italic" MinHeight="40" GotFocus="GenChatBox_GotFocus" LostFocus="GenChatBox_LostFocus" Text="Suggested Officer Chat for Selected Item" TabIndex="3" BorderBrush="#FF688CAF" BorderThickness="1,0" />
                <CheckBox x:Name="lootAllTypes" Content="All Loot Types" Margin="0,0,10,-2" Height="15" VerticalAlignment="Bottom"  Checked="CheckBoxLootAllTypes_Checked" Unchecked="CheckBoxLootAllTypes_Checked" ToolTip="Always Include Alt and Rot Requests Een With Mains Asking" TabIndex="4" HorizontalAlignment="Right" Width="95" BorderBrush="#FF688CAF"/>
                <Button Margin="0,0,109,-5" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="18" ToolTip="Copy To Clipbload" Click="GenChatButton_Click" BorderBrush="#FF688CAF" BorderThickness="1">
                  <StackPanel Orientation="Horizontal" Height="22" Margin="0" HorizontalAlignment="Center">
                    <Image Source="/LootManager;component/Icons/CopyToClipboard/CopyToClipboard_16x.png" Margin="0,0,0,2" Panel.ZIndex="1" Width="20" Height="20"/>
                  </StackPanel>
                </Button>
                <Label x:Name="copyNotice" Content="Copied to Clipboard" VerticalAlignment="Bottom" HorizontalAlignment="Right"  Margin="0,0,131,2" FontStyle="Italic" FontSize="11" Opacity="0" Visibility="Hidden" Background="White" />
              </Grid>
            </Grid>
          </Grid>
        </TabItem>
        <TabItem Header="Save Loot">
          <Grid Background="#FFE5E5E5">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="191" />
                <RowDefinition Height="*"/>
                <RowDefinition Height="80"/>
              </Grid.RowDefinitions>
              <Grid Grid.Row="0">
                <Grid Margin="0" MinWidth="385">
                  <Border BorderBrush="#FF688CAF" BorderThickness="1" Margin="192,94,191,95" Background="#FFF0F0F0"/>
                  <Grid MaxWidth="440" Margin="0">
                    <GroupBox Header="New Loot Info" Background="#FFFAFAFA" BorderBrush="#FF688CAF" Height="134" VerticalAlignment="Top" Margin="10,4,10,0" />
                    <ComboBox x:Name="newLootItem" VerticalContentAlignment="Center" IsTextSearchEnabled="True" DisplayMemberPath="Name" SelectedValuePath="Name" Grid.Column="0" Margin="26,30,157,0" Height="24" VerticalAlignment="Top" IsEditable="True" IsSynchronizedWithCurrentItem="False" LostFocus="NewLootItem_LostFocus" SelectionChanged="NewLootItem_SelectionChanged" TextBoxBase.TextChanged="NewLoot_TextChanged" MinWidth="202"/>
                    <ComboBox x:Name="newLootSlot" VerticalContentAlignment="Center" IsTextSearchEnabled="True" Grid.Column="0" Margin="0,30,25,0" Height="24" VerticalAlignment="Top" IsEditable="True" IsSynchronizedWithCurrentItem="True" LostFocus="NewLootSlot_LostFocus" SelectionChanged="NewLootSlot_SelectionChanged" Width="120" IsReadOnly="True" SelectedIndex="0" TextBoxBase.TextChanged="NewLoot_TextChanged" MinWidth="120" HorizontalAlignment="Right" RenderTransformOrigin="0.709,0.25">
                      <System:String>Any Slot</System:String>
                    </ComboBox>
                    <DatePicker x:Name="newLootDate" Grid.Column="0" Margin="0,64,25,0" Height="24" VerticalAlignment="Top" MinWidth="120" HorizontalAlignment="Right" Width="120"/>
                    <ComboBox x:Name="newLootEvent" VerticalContentAlignment="Center" IsTextSearchEnabled="True" DisplayMemberPath="ShortName" SelectedValuePath="ShortName" Grid.Column="0" Margin="26,64,157,0" Height="24" VerticalAlignment="Top" IsEditable="True" IsSynchronizedWithCurrentItem="False" LostFocus="NewLootEvent_LostFocus" SelectionChanged="NewLootEvent_SelectionChanged" MinWidth="202"/>
                    <CheckBox x:Name="newLootAlt" Grid.Column="0" Content="Alt" Margin="147,103,203,0" VerticalAlignment="Top" Height="15" Checked="NewLootAlt_Checked" />
                    <CheckBox x:Name="newLootRot" Grid.Column="0" Content="Rot" Margin="187,103,160,0" VerticalAlignment="Top" Height="15"/>
                    <CheckBox x:Name="updateItemsDB" Content="Add to Items DB" Margin="237,105,26,0" VerticalAlignment="Top" RenderTransformOrigin="0.755,0.044" IsChecked="True" Height="20" HorizontalAlignment="Center" IsEnabled="False" Width="120" Foreground="#FFFF880F" Visibility="Hidden"/>
                    <Button Content="Reset" Height="26" Margin="0,150,83,0" VerticalAlignment="Top" Click="NewLootReset_Click" Background="White" HorizontalAlignment="Right" Width="50" MinWidth="50"/>
                    <Button x:Name="newLootSaveButton" Content="Save" Height="26" Margin="0,150,23,0" VerticalAlignment="Top" Background="White" IsEnabled="False" Click="NewLootSave_Clicked" HorizontalAlignment="Right" Width="50" MinWidth="50"/>
                    <ComboBox x:Name="newLootPlayer" VerticalContentAlignment="Center" IsTextSearchEnabled="True" DisplayMemberPath="Name" SelectedValuePath="Name" Grid.Column="0" Margin="26,98,0,0" Height="24" VerticalAlignment="Top" IsEditable="True" IsSynchronizedWithCurrentItem="False" LostFocus="NewLootPlayer_LostFocus" TextBoxBase.TextChanged="NewLoot_TextChanged" MinWidth="112" HorizontalAlignment="Left" Width="112"/>
                  </Grid>
                </Grid>
              </Grid>
              <DataGrid x:Name="lootedListView" ContextMenuOpening="LootedListContextMenu_OnOpened" AutoGenerateColumns="False" Margin="-3,0" CanUserAddRows="False" ColumnWidth="SizeToHeader" HeadersVisibility="Column" Grid.Row="1" GridLinesVisibility="None" CanUserReorderColumns="False" SelectionChanged="LootedList_SelectionChanged" SelectionMode="Single" LoadingRow="LootedList_LoadingRow" UnloadingRow="LootedList_UnloadingRow" Background="#FFE8E8E8" CanUserResizeRows="False">
                <DataGrid.Resources>
                  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF569FD8"/>
                  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FF646464" />
                  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#FFFFFF" />
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                  <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.ContextMenu>
                  <ContextMenu Focusable="False">
                    <MenuItem x:Name="lootedListClearMenuItem" InputGestureText="Del" Header="Clear Selected" Click="ListClear_Click" Focusable="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/Cancel/Cancel_16xMD.png"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <Separator Height="0"/>
                    <MenuItem x:Name="lootedListClearAllMenuItem" Header="Clear All" Click="LootedListReset_Click" Focusable="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/ClearWindowContent/ClearWindowContent_16x.png" />
                      </MenuItem.Icon>
                    </MenuItem>
                  </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                  <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="" IsReadOnly="True" MaxWidth="20" MinWidth="20" CanUserReorder="False" Width="16">
                    <DataGridTemplateColumn.CellTemplate>
                      <DataTemplate>
                        <Button Command="Delete" BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" Background="#FFF4F4F4">
                          <Image Source="/LootManager;component/Icons/Cancel/Cancel_16xMD.png"/>
                        </Button>
                      </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                  </DataGridTemplateColumn>
                  <DataGridTextColumn Binding="{Binding Player}" ClipboardContentBinding="{x:Null}" Header="Player" IsReadOnly="True" CanUserReorder="False"  MinWidth="90" Width="120*" />
                  <DataGridTextColumn Binding="{Binding Item}" ClipboardContentBinding="{x:Null}" Header="Item Looted" IsReadOnly="True" CanUserReorder="False" Width="175*"/>
                  <DataGridTextColumn Binding="{Binding Found}" ClipboardContentBinding="{x:Null}" Header="Found In DB" IsReadOnly="True" CanUserReorder="False" Width="80*"/>
                </DataGrid.Columns>
              </DataGrid>
              <TextBox x:Name="newLootAuditTextBox" Margin="-3,1,-3,-3" Grid.Row="2" Text="Audit Log" IsReadOnly="True" TextWrapping="Wrap" FontFamily="Consolas" FontSize="10" BorderBrush="#FF688EAF" BorderThickness="1,0,1,1" VerticalScrollBarVisibility="Auto"/>
            </Grid>
          </Grid>
        </TabItem>
        <TabItem Header="Manage Members">
          <Grid Background="#FFE5E5E5">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="27" />
                <RowDefinition Height="*" />
                <RowDefinition Height="79" />
              </Grid.RowDefinitions>
              <Border x:Name="membersDataBorder" Background="Orange" Padding="0" BorderThickness="1" BorderBrush="#FF688CAF" Grid.Row="0" Margin="-3,-3,-3,0" />
              <Label x:Name="membersText" Content="No Members Data Available" Margin="10,-1,199,2" FontStyle="Italic" />
              <CheckBox x:Name="onlyActiveMembers" Content="Active Members Only" IsChecked="True" VerticalAlignment="Bottom" Height="16" HorizontalAlignment="Right" Width="154" Checked="CheckBoxActiveMembers_Checked" Unchecked="CheckBoxActiveMembers_Checked" ToolTip="Only Show Active Members" Margin="0,0,2,6"/>
              <DataGrid x:Name="membersListView" ContextMenuOpening="MembersViewListContextMenu_OnOpened" CanUserAddRows="False" AutoGenerateColumns="False" Margin="-3,24,-3,1" ColumnWidth="SizeToHeader" HeadersVisibility="Column" GridLinesVisibility="None" CanUserReorderColumns="False" Background="#FFE8E8E8" CellEditEnding="MembersListView_CellEditEnding" CanUserResizeRows="False" Grid.RowSpan="2" CanUserDeleteRows="False" SelectionChanged="MembersListView_SelectionChanged">
                <DataGrid.Resources>
                  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF569FD8"/>
                  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FF646464" />
                  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#FFFFFF" />
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                  <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                  </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.ContextMenu>
                  <ContextMenu Focusable="False">
                    <MenuItem x:Name="membersListViewAddMenuItem" Header="Add New Member" IsEnabled="False" Click="MembersListViewAdd_Click" Focusable="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/AddRow/AddRow_16x.png"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="membersListViewClearMenuItem" IsEnabled="False" InputGestureText="Del" Header="Clear Selected" Click="ListClear_Click" Focusable="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/Cancel/Cancel_16xMD.png"/>
                      </MenuItem.Icon>
                    </MenuItem>
                    <Separator Height="0"/>
                    <MenuItem x:Name="membersListViewLootMenuItem" Header="View Selected Loot History" IsEnabled="False" Click="MembersListViewLoot_Click" Focusable="False">
                      <MenuItem.Icon>
                        <Image Source="/LootManager;component/Icons/DataTable/DataTable_16x.png"/>
                      </MenuItem.Icon>
                    </MenuItem>
                  </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                  <DataGridTextColumn Binding="{Binding Name}" ClipboardContentBinding="{x:Null}" Header="Player" IsReadOnly="False" CanUserReorder="False" Width="86*"/>
                  <DataGridTextColumn Binding="{Binding ForumName}" ClipboardContentBinding="{x:Null}" Header="Forum Name" IsReadOnly="False" CanUserReorder="False" Width="86*"/>
                  <DataGridComboBoxColumn ItemsSource="{StaticResource ClassList}"  SelectedValueBinding="{Binding Class}" ClipboardContentBinding="{x:Null}" Header="Class" IsReadOnly="False" CanUserReorder="False" Width="94*" />
                  <DataGridComboBoxColumn ItemsSource="{StaticResource RankList}" SelectedValueBinding="{Binding Rank}" ClipboardContentBinding="{x:Null}" Header="Rank" IsReadOnly="False" CanUserReorder="False" Width="76*"/>
                  <DataGridCheckBoxColumn Binding="{Binding Active}" ClipboardContentBinding="{x:Null}" Header="Active" IsReadOnly="False" CanUserReorder="False" Width="52">
                    <DataGridCheckBoxColumn.CellStyle>
                      <Style>
                        <EventSetter Event="CheckBox.Checked" Handler="CheckBoxMemberActiveData_Checked"/>
                        <EventSetter Event="CheckBox.Unchecked" Handler="CheckBoxMemberActiveData_Checked"/>
                      </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                  </DataGridCheckBoxColumn>
                </DataGrid.Columns>
              </DataGrid>
              <TextBox x:Name="memberAuditTextBox" Margin="-3,0,-3,-3" Grid.Row="2" Text="Audit Log" IsReadOnly="True" TextWrapping="Wrap" FontFamily="Consolas" FontSize="10" BorderBrush="#FF688EAF" BorderThickness="1,0,1,1" VerticalScrollBarVisibility="Auto"/>
            </Grid>
          </Grid>
        </TabItem>
      </TabControl>
      <GridSplitter Margin="1,41,1,0" MinWidth="3" Foreground="White" Background="#FFF0F0F0" Grid.IsSharedSizeScope="True" MinHeight="1" Grid.Column="1" HorizontalAlignment="Center" Width="4"/>
      <TabControl x:Name="secondTabControl" Margin="0,20,0,-1" Grid.Column="2" Background="#FFF0F0F0" SelectionChanged="ChatLootTab_SelectionChanged" BorderBrush="#FF688CAF">
        <TabControl.Resources>
          <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                  <Grid x:Name="Panel">
                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                      <Setter TargetName="Panel" Property="Background" Value="#FFA7CEEE" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                      <Setter TargetName="Panel" Property="Background" Value="#FFF0F0F0" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </TabControl.Resources>
        <TabItem Header="Chat Logs" BorderBrush="{x:Null}" Background="{x:Null}" Margin="0" Height="19" VerticalAlignment="Top">
          <Grid x:Name="chatGrid" Background="#FFE8E8E8" Margin="0,0,0,-4">
            <Grid.RowDefinitions>
              <RowDefinition Height="25"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Expander Grid.Row="1" Header="Guild Chat" IsExpanded="True" Expanded="GuildChatExpander_Expanded" Collapsed="GuildChatExpander_Collapsed" Margin="0">
              <RichTextBox x:Name="guildChatBox" Grid.Row="0" IsReadOnly="True" VerticalScrollBarVisibility="Auto" FontSize="14" TabIndex="7" BorderBrush="#FF688CAF" Margin="-4,0">
                <FlowDocument AllowDrop="False">
                  <Paragraph />
                </FlowDocument>
              </RichTextBox>
            </Expander>
            <Expander Grid.Row="2" Header="Officer Chat" Collapsed="OfficerChatExpander_Collapsed" Expanded="OfficerChatExpander_Expanded" IsExpanded="True">
              <RichTextBox x:Name="officerChatBox" IsReadOnly="True" VerticalScrollBarVisibility="Auto" FontSize="14" TabIndex="8" BorderBrush="#FF688CAF" Margin="-4,0">
                <FlowDocument AllowDrop="False">
                  <Paragraph />
                </FlowDocument>
              </RichTextBox>
            </Expander>
            <Expander Grid.Row="3" Header="Received Tells" IsExpanded="True" Collapsed="TellsChatExpander_Collapsed" Expanded="TellsChatExpander_Expanded">
              <RichTextBox x:Name="tellsChatBox" IsReadOnly="True" VerticalScrollBarVisibility="Auto" FontSize="14" TabIndex="9" BorderBrush="#FF688CAF" Margin="-4,0">
                <FlowDocument AllowDrop="False">
                  <Paragraph />
                </FlowDocument>
              </RichTextBox>
            </Expander>
            <Border x:Name="chatBorder" Margin="-3,-3,-3,0" Background="Orange" Padding="0" BorderThickness="1" BorderBrush="#FF688CAF" />
            <Label x:Name="logStatusText" Content="No Log File Selected" Margin="10,-1,275,0" FontStyle="Italic" Height="26" />
            <CheckBox x:Name="lootChatOnly" Content="Loot Chat Only" Margin="0,0,15,4" VerticalAlignment="Bottom" Height="16" HorizontalAlignment="Right" Width="110" Checked="CheckBoxLootOnly_Checked" Unchecked="CheckBoxLootOnly_Checked" ToolTip="Only Show Loot Related Chat Messages" TabIndex="6"/>
            <CheckBox x:Name="autoScroll" Content="Auto-Scroll" VerticalAlignment="Bottom" Height="16" HorizontalAlignment="Right" Width="85" Checked="CheckBoxAutoscroll_Checked" Unchecked="CheckBoxAutoscroll_Checked" Margin="0,0,133,4" ToolTip="Automaticaly Scroll To Last Chat Message Received" IsChecked="True" TabIndex="5"/>

          </Grid>
        </TabItem>
        <TabItem x:Name="lootHistoryTab" Header="Loot History">
          <Grid Background="#FFFAFAFA">
            <Border x:Name="historyBorder" Background="Orange" Margin="-3,-3,-3,0" Padding="0" BorderThickness="1" BorderBrush="#FF688CAF" Height="28" VerticalAlignment="Top"/>
            <Label x:Name="historyStatusText" Margin="10,-1,234,0" FontStyle="Italic" Height="26" VerticalAlignment="Top" Content="No Loot Data Available"/>
            <TextBox x:Name="lootDetailsFilterBox" Height="22" Margin="73,65,43,0" TextWrapping="Wrap" Text="Enter Player Names To Limit Results" VerticalAlignment="Top" VerticalContentAlignment="Center" FontStyle="Italic" TextChanged="LootDetailsFilterTextBox_TextChanged" GotFocus="LootDetailsFilterTextBox_GotFocus" LostFocus="LootDetailsFilterTextBox_LostFocus" KeyUp="LootDetailsFilterTextBox_KeyUp" BorderBrush="#FF688CAF"/>
            <Label Content="Players:" HorizontalAlignment="Left" Margin="21,63,0,0" VerticalAlignment="Top" Width="98"/>
            <xctk:CheckComboBox x:Name="tierComboBox" HorizontalAlignment="Left" VerticalContentAlignment="Center" VerticalAlignment="Top" IsEditable="true" Width="150" Height="22" Margin="199,34,0,0" BorderThickness="1" ClipToBounds="True" BorderBrush="#FF688CAF" Panel.ZIndex="1" ItemSelectionChanged="TierComboBox_ItemSelectionChanged"/>
            <Label Content="Tier:" HorizontalAlignment="Left" Margin="163,32,0,0" VerticalAlignment="Top" Width="43"/>
            <Label Content="Days Back:" HorizontalAlignment="Left" Margin="2,32,0,0" VerticalAlignment="Top" Width="70"/>
            <xctk:LongUpDown x:Name="timeSpinner" Width="74" AllowTextInput="False" ValueChanged="TimeSpinner_ValueChanged" Increment="30" FormatString="0 Days" Value="90" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Height="22" Margin="73,35,0,0" VerticalAlignment="Top" Minimum="30" Maximum="9999" AutoMoveFocus="False" BorderBrush="#FF688CAF"/>
            <xctk:CheckComboBox x:Name="classComboBox" HorizontalAlignment="Left" VerticalContentAlignment="Center" VerticalAlignment="Top" IsEditable="true" Width="205" Height="22" Margin="407,34,0,0" BorderThickness="1" ClipToBounds="True" BorderBrush="#FF688CAF" Panel.ZIndex="1" ItemSelectionChanged="ClassComboBox_ItemSelectionChanged"/>
            <Label Content="Role:" HorizontalAlignment="Left" Margin="365,32,0,0" VerticalAlignment="Top" Width="43"/>
            <DataGrid x:Name="lootDetailsListView" ContextMenuOpening="LootDetailsListContextMenu_OnOpened" AutoGenerateColumns="False" CanUserAddRows="False" IsTabStop="True" ColumnWidth="SizeToHeader" HeadersVisibility="Column" CanUserReorderColumns="False" Margin="-3,94,-3,-3" HorizontalGridLinesBrush="#FF688CAF" VerticalGridLinesBrush="#FF688CAF" Background="#FFE8E8E8" CanUserResizeRows="False">
              <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF569FD8"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FF569FD8" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#FFFFFF" />
                <Style TargetType="{x:Type DataGridRow}">
                  <EventSetter Event="Control.MouseDoubleClick" Handler="LootDetailsListRow_DoubleClick"/>
                </Style>
              </DataGrid.Resources>
              <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                  <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
              </DataGrid.ColumnHeaderStyle>
              <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Player}" ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="True" CanUserReorder="False" MinWidth="85" Width="88*" />
                <DataGridTextColumn Binding="{Binding Class}" ClipboardContentBinding="{x:Null}" Header="Class" IsReadOnly="True" CanUserReorder="False" MinWidth="88" Width="88*" />
                <DataGridTextColumn Binding="{Binding Total}" ClipboardContentBinding="{x:Null}" Header="Total" IsReadOnly="True" MaxWidth="40" Width="40" CanUserReorder="False">
                  <DataGridTextColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                  </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Visibles}" ClipboardContentBinding="{x:Null}" Header="Visibles" IsReadOnly="True" MaxWidth="55" Width="55" CanUserReorder="False">
                  <DataGridTextColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                  </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding NonVisibles}" ClipboardContentBinding="{x:Null}" Header="Non-Vis" IsReadOnly="True" MaxWidth="62" Width="62" CanUserReorder="False">
                  <DataGridTextColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                  </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Weapons}" ClipboardContentBinding="{x:Null}" Header="Weapons" IsReadOnly="True" MaxWidth="65" Width="65" CanUserReorder="False">
                  <DataGridTextColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                  </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Special}" ClipboardContentBinding="{x:Null}" Header="Special" IsReadOnly="True" MaxWidth="50" Width="50" CanUserReorder="False">
                  <DataGridTextColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                  </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Main}" ClipboardContentBinding="{x:Null}" Header="Main" IsReadOnly="True" MaxWidth="40" Width="40" CanUserReorder="False">
                  <DataGridTextColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                  </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Alt}" ClipboardContentBinding="{x:Null}" Header="Alt" IsReadOnly="True"  MaxWidth="32" Width="32" CanUserReorder="False">
                  <DataGridTextColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                  </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Rot}" ClipboardContentBinding="{x:Null}" Header="Rot" IsReadOnly="True" MaxWidth="32" Width="32" CanUserReorder="False">
                  <DataGridTextColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                  </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding LastAltDate}" SortMemberPath="LastAltDateValue" IsReadOnly="True" ClipboardContentBinding="{x:Null}" Header="Last Alt Date" CanUserReorder="False" MaxWidth="90" Width="90*">
                  <DataGridTextColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                  </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding LastMainDate}" SortMemberPath="LastMainDateValue" IsReadOnly="True" ClipboardContentBinding="{x:Null}" Header="Last Main Date" CanUserReorder="False" MinWidth="90" Width="90*" >
                  <DataGridTextColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                  </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
              </DataGrid.Columns>
              <DataGrid.ContextMenu>
                <ContextMenu Focusable="False">
                  <MenuItem x:Name="lootHistoryViewLogMenuItem" Header="View Selected Loot Log(s)" Click="LootDetailsListViewLog_Click" Focusable="False" IsEnabled="False">
                    <MenuItem.Icon>
                      <Image Source="/LootManager;component/Icons/DataTable/DataTable_16x.png"/>
                    </MenuItem.Icon>
                  </MenuItem>
                </ContextMenu>
              </DataGrid.ContextMenu>
            </DataGrid>
          </Grid>
        </TabItem>
      </TabControl>
    </Grid>
  </Grid>
</Window>